// Methode Traversy pour le Bcrypt && JwT

import asyncHandler from "express-async-handler";
import jwt from "jsonwebtoken";
import { UserModel } from "../../models/User";

//LOGIN
const login = asyncHandler(async (req, res, next) => {
  const { email, password } = req.body;

  const user = await UserModel.findOne({ email });
  if (user && (await user.matchPassword(password))) {
    // Token
    const token = jwt.sign({ userId: user._id }, process.env.JWT_SECRET, {
      expiresIn: "30d",
    });

    // Set Jwt Cookie
    res.cookie("jwt", token, {
      httpOnly: true,
      secure: process.env.NODE_ENV !== "development",
      sameSite: "strict",
      maxAge: 30 * 24 * 60 * 60 * 1000, //30days
    });

    res.status(200).json({
      _id: user._id,
      name: user.name,
      email: user.email,
      isAdmin: user.isAdmin,
    });
  } else {
    res.status(401);
    throw new Error("Email ou mot de passe incorrect");
  }
});

// LOGOUT
const logout = asyncHandler(async (req, res) => {
  res.cookie("jwt", "loggedout", {
    httpOnly: true,
    expires: new Date(0),
  });
  res.status(200).json({ message: "Vous vous êtes déconnecté !" });
});

export { login, logout, register };
